@model Jamu.Models.ProductModel
@using Jamu.Models

@{
    var Categories = (List<CategoryModel>)ViewBag.Categories;
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Product", new { Id = Model.Id }, FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>ProductModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" , @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "0" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BrandId, "Brand", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("BrandId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BrandId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Category, "Categories", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (var row in Categories)
                {
                    var selectedText = "";
                    var catSelected = row.Product.ToList();
                    foreach(var s in catSelected)
                    {
                        if(s.Id == Model.Id)
                        {
                            selectedText = "checked";
                        }
                    }
                    <label class="checkbox-inline">
                        <input type="checkbox" name="CategoryId" value="@row.Id" @selectedText> @row.Name
                    </label>
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Expired, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Expired, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Expired, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Image", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" id="File" name="upload" />
            </div>
        </div>

        @if (!string.IsNullOrWhiteSpace(Model.Image))
        {
            <div class="form-group">
                <label class="col-md-2 control-label" for="inputDefault"></label>
                <div class="col-md-10">
                    <img class="img-responsive img-thumbnail" src="/uploads/@Model.Image" />
                </div>
            </div>
        }

        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
